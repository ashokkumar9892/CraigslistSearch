name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        # Note: You may need to use [ARM64], I'm note sure what the linux server uses in this case. - Lance M.
        # See https://docs.microsoft.com/en-us/dotnet/core/rid-catalog
        targetplatform: [x64]

  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest

    name: Build and Deploy Job
    steps:
      # Note: Using varibles gives you the greatest level of control over the system, no need to worry about envVar format
      # Set the varible name and values, then use them throughout the jobs for that agent's OS. - Lance M.
      env:
            NuGetConfig_Path: src/nuget.config
            Solution_Path: src/CraigslistSearch.sln
            Client_Project_Path: src/CraigslistSearch/Client/CraigslistSearch.Client.csproj
            Function_Project_Path: src/CraigslistSearch.Function/CraigslistSearch.Function.csproj
            App_Location_Path: src/CraigslistSearch/Client/published/wwwroot
            TELERIK_FEED_USERNAME: ${{ secrets.UserName }}
            TELERIK_FEED_PASSWORD: ${{ secrets.Password }}

      - uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
          
      - name: Setup NuGet.exe for use with actions
        uses: NuGet/setup-nuget@v1.0.2
        with:
          # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
          nuget-version: 'latest'

      # Note: Invoke dotnet restore and point to nuget.config - Lance M.
      - name: NuGet Restore
        run: dotnet restore $env:Client_Project_Path --configfile=$env:NuGetConfig_Path --runtime linux-${{ matrix.targetplatform }}
        
      - name: Build App
        run: dotnet publish -c Release -o published $env:Client_Project_Path

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WITTY_FLOWER_0E4BB791E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match you app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: $env:App_Location_Path # App source code path
          api_location: "api" # Api source code path - optional
          app_artifact_location: $env:App_Location_Path # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WITTY_FLOWER_0E4BB791E }}
          action: "close"
