name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

env:
  AZURE_FUNCTIONAPP_NAME: craigslistsearch-function  # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/CraigslistSearch.Function/CraigslistSearch.Function.csproj'    # set this to the path to your web app project, defaults to the repository root

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest

    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Setup NuGet.exe for use with actions
        uses: NuGet/setup-nuget@v1.0.2
        with:
          # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
          nuget-version: 'latest'

      # Note: Invoke dotnet restore and point to nuget.config - Lance M.
      - name: NuGet Restore
        env:
          # Note: set the environment varibles defined in nuget.config using the values in secrets - Lance M.
          TELERIK_FEED_USERNAME: ${{ secrets.TelerikUserName  }}
          TELERIK_FEED_PASSWORD: ${{ secrets.TelerikPassword }}
        run: dotnet restore src/CraigslistSearch/Client/CraigslistSearch.Client.csproj --configfile=src/nuget.config --runtime linux-x64

      - name: Build App
        run: dotnet publish -c Release -o src/CraigslistSearch/Client/published src/CraigslistSearch/Client/CraigslistSearch.Client.csproj

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WITTY_FLOWER_0E4BB791E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match you app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "src/CraigslistSearch/Client/published/wwwroot" # App source code path
          app_artifact_location: "src/CraigslistSearch/Client/published/wwwroot" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WITTY_FLOWER_0E4BB791E }}
          action: "close"
